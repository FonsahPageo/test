pipeline {
    agent any
    environment {
        KUBE_CONFIG = "--kubeconfig=/var/jenkins_home/config"
    }
    stages {
        stage('Deploy to Microservices') {
            // steps {
            //     script {
            //         def microservices = [
            //             'auth-client': 'amberex/authclient_in_memorykube',
            //             'auth-server': 'amberex/authserver_in_memorykube',
            //             'barber-dashboard': 'amberex/barber_dashboardkube',
            //             'config-server': 'amberex/config_serverkube',
            //             'customer-order': 'amberex/customerorderskube',
            //             'notifications': 'amberex/notification_servicekube',
            //             'payments': 'amberex/paymentservicekube',
            //             'service-registry': 'amberex/service_registrykube',
            //             'user-interface': 'amberex/user_interfacekube'
            //         ]
                    
            //         microservices.each { microservice ->
            //             dir(microservice) {
            //                 echo "Deploying ${microservice}..."
            //                 sh """
            //                     kubectl ${KUBE_CONFIG} apply -f deployment.yaml
            //                     kubectl ${KUBE_CONFIG} apply -f service.yaml
            //                 """
            //             }
            //         }
            //     }
            // }
        }

        stage('Deploy Microservices') {
            steps {
                script {
                    def microservices = sh(script: "ls -d */", returnStdout: true).trim().split("\n")

                    microservices.each { microservice ->
                        dir(microservice) {
                            echo "Deploying ${microservice}..."
                            sh """
                                kubectl ${KUBE_CONFIG} apply -f deployment.yaml
                                kubectl ${KUBE_CONFIG} apply -f service.yaml
                            """
                        }
                    }
                }
            }
        }

        stage('Verify deployment') {
            steps {
                script {
                    sh 'kubectl --kubeconfig=/var/jenkins_home/.kube/config get pods'
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline finished'
        }
        success {
            echo 'Deployment was successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
